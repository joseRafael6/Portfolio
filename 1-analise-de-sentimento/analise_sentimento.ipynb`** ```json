{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Análise de Sentimento com Python\n",
    "## Passo 1: Importar as bibliotecas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import nltk\n",
    "from textblob import TextBlob\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Configuração inicial (pode ser necessário baixar na primeira vez)\n",
    "# nltk.download('punkt')\n",
    "# nltk.download('stopwords')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Passo 2: Carregar os dados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Lembre-se de colocar o seu arquivo CSV na pasta 'data'\n",
    "# Este código espera um arquivo chamado 'reviews.csv' com uma coluna chamada 'review'\n",
    "df = pd.read_csv('data/reviews.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Passo 3: Limpeza e Pré-processamento"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Usaremos apenas uma amostra de 1000 linhas para agilizar o processo\n",
    "df_sample = df.head(1000)\n",
    "# Garante que estamos trabalhando com uma cópia e seleciona a coluna de texto\n",
    "df_sample = df_sample[['review']].copy()\n",
    "# Remove linhas que possam estar vazias\n",
    "df_sample.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Passo 4: Análise de Sentimento"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def analisar_sentimento(texto):\n",
    "    # O TextBlob funciona melhor com textos em inglês. \n",
    "    # Se seu dataset estiver em português, a precisão pode ser menor ou requerer outras bibliotecas.\n",
    "    # Para este projeto, assumimos que o dataset está em inglês.\n",
    "    blob = TextBlob(texto)\n",
    "    # Retorna a polaridade: -1 (muito negativo) a 1 (muito positivo)\n",
    "    return blob.sentiment.polarity\n",
    "\n",
    "df_sample['polaridade'] = df_sample['review'].apply(analisar_sentimento)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Passo 5: Classificar o sentimento"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def classificar_sentimento(polaridade):\n",
    "    if polaridade > 0.1:  # Limiar para considerar positivo\n",
    "        return 'Positivo'\n",
    "    elif polaridade < -0.1: # Limiar para considerar negativo\n",
    "        return 'Negativo'\n",
    "    else:\n",
    "        return 'Neutro'\n",
    "\n",
    "df_sample['sentimento'] = df_sample['polaridade'].apply(classificar_sentimento)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Passo 6: Visualização dos Resultados"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"Contagem de Sentimentos:\")\n",
    "print(df_sample['sentimento'].value_counts())\n",
    "\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.set_style(\"whitegrid\")\n",
    "sns.countplot(x='sentimento', data=df_sample, palette='viridis', order=['Positivo', 'Neutro', 'Negativo'])\n",
    "plt.title('Distribuição dos Sentimentos nas Avaliações', fontsize=16)\n",
    "plt.xlabel('Sentimento', fontsize=12)\n",
    "plt.ylabel('Contagem', fontsize=12)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
